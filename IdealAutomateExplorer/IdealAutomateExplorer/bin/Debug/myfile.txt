//
// S T A R T   N E W   P R O C E S S:  explorer
//
List<string> myWindowTitles1 = myActions.GetWindowTitlesByProcessName("explorer"); 
myWindowTitles1.RemoveAll(item => item == ""); 
if (!myWindowTitles1[0].StartsWith(@"Untitled - Notepad")) {  
  // You may need to manually add content parameter as second parameter for run???
  myActions.Run(@"C:\WINDOWS\Explorer.EXE",""); 
  myActions.Sleep(1000); 
} 
if (myWindowTitles1.Count > 0) { 
  myActions.ActivateWindowByTitle(myWindowTitles1[0], (int)WindowShowEnum.SW_SHOWMAXIMIZED); 
}   
//
// P R O C E S S   H A S   B E E N   S T A R T E D:  explorer
//
//
// S T A R T   N E W   P R O C E S S:  notepad
//
List<string> myWindowTitles2 = myActions.GetWindowTitlesByProcessName("notepad"); 
myWindowTitles2.RemoveAll(item => item == ""); 
if (!myWindowTitles2[0].StartsWith(@"Untitled - Notepad")) {  
  // You may need to manually add content parameter as second parameter for run???
  myActions.Run(@"C:\WINDOWS\system32\notepad.exe",""); 
  myActions.Sleep(1000); 
} 
if (myWindowTitles2.Count > 0) { 
  myActions.ActivateWindowByTitle(myWindowTitles2[0], (int)WindowShowEnum.SW_SHOWMAXIMIZED); 
}   
//
// P R O C E S S   H A S   B E E N   S T A R T E D:  notepad
//
myActions.TypeText("note", 500);
myActions.TypeText("{ENTER}", 500);
//
// S T A R T   N E W   P R O C E S S:  notepad++
//
List<string> myWindowTitles3 = myActions.GetWindowTitlesByProcessName("notepad++"); 
myWindowTitles3.RemoveAll(item => item == ""); 
if (!myWindowTitles3[0].StartsWith(@"C:\Users\harve\AppData\Roaming\IdealAutomate\C+-Users-harve-Documents-GitHub-IdealAutomate-IdealAutomateExplorer\MatchInfo.txt - Notepad++")) {  
  // You may need to manually add content parameter as second parameter for run???
  myActions.Run(@"C:\Program Files (x86)\Notepad++\notepad++.exe",""); 
  myActions.Sleep(1000); 
} 
if (myWindowTitles3.Count > 0) { 
  myActions.ActivateWindowByTitle(myWindowTitles3[0], (int)WindowShowEnum.SW_SHOWMAXIMIZED); 
}   
//
// P R O C E S S   H A S   B E E N   S T A R T E D:  notepad++
//
myActions.TypeText("no", 500);
myActions.TypeText("{BACKSPACE}", 500);
//
// S T A R T   N E W   P R O C E S S:  devenv
//
List<string> myWindowTitles4 = myActions.GetWindowTitlesByProcessName("devenv"); 
myWindowTitles4.RemoveAll(item => item == ""); 
if (!myWindowTitles4[0].StartsWith(@"IdealAutomateScriptRecorder - Microsoft Visual Studio ")) {  
  // You may need to manually add content parameter as second parameter for run???
  myActions.Run(@"C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\devenv.exe",""); 
  myActions.Sleep(1000); 
} 
if (myWindowTitles4.Count > 0) { 
  myActions.ActivateWindowByTitle(myWindowTitles4[0], (int)WindowShowEnum.SW_SHOWMAXIMIZED); 
}   
//
// P R O C E S S   H A S   B E E N   S T A R T E D:  devenv
//
//
// S T A R T   N E W   P R O C E S S:  notepad++
//
List<string> myWindowTitles5 = myActions.GetWindowTitlesByProcessName("notepad++"); 
myWindowTitles5.RemoveAll(item => item == ""); 
if (!myWindowTitles5[0].StartsWith(@"new 1 - Notepad++")) {  
  // You may need to manually add content parameter as second parameter for run???
  myActions.Run(@"C:\Program Files (x86)\Notepad++\notepad++.exe",""); 
  myActions.Sleep(1000); 
} 
if (myWindowTitles5.Count > 0) { 
  myActions.ActivateWindowByTitle(myWindowTitles5[0], (int)WindowShowEnum.SW_SHOWMAXIMIZED); 
}   
//
// P R O C E S S   H A S   B E E N   S T A R T E D:  notepad++
//
myActions.TypeText("notep", 500);
myActions.TypeText("{ENTER}", 500);
string myResult = myActions.PutInternetExplorerTabTitleInEntity();
