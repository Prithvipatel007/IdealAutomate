
 <Page x:Class="Hardcodet.Wpf.Samples.Help.OverviewAutomater"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	Title="Ideal Automate Overview"
	  >

    <FlowDocumentReader ViewingMode="Scroll">
        <FlowDocument FontSize="20">
            <Paragraph>
                <Image Source="/Images/help1.png" Width="190" Height="190" Margin="0,0,30,0" />
                <Run FontSize="26" BaselineAlignment="Center">Ideal Automate Explorer Overview</Run>              
            </Paragraph>
            <Paragraph>Open Source C# Development Platform for Automating Computer Tasks</Paragraph>
            <Paragraph>
                <Hyperlink Click="Hyperlink_Click">Download Source Code from Github</Hyperlink> 
            </Paragraph>
            <Paragraph>
                Here is a screenshot of IdealAutomateExplorer in List View:
            </Paragraph>
            <Paragraph>
                <Image Source="/Images/IdealAutomateExplorer.PNG" Width="800"  Margin="0,0,30,0" />
            </Paragraph>
            <Paragraph>
                Here is a screenshot of IdealAutomateExplorer in Details View:
            </Paragraph>
            <Paragraph>
                <Image Source="/Images/IdealAutomateExplorerDetailsView.PNG" Width="800"  Margin="0,0,30,0" />
            </Paragraph>
            <Paragraph>
                Ideal Automate is an open source development platform that allows C# developers to automate any repetitive task and to share what they have automated with other developers.
            </Paragraph>

            <Paragraph>
                The main project is Ideal Automate Explorer. Here are three ways that you can use Ideal Automate Explorer:
            </Paragraph>
            <Paragraph>
                1. Central Repository for AI/Automation Applications
                <LineBreak/>
                2. Knowledge Base
                <LineBreak/>
                3. ToDo List
                <LineBreak/>
            </Paragraph>
            <Paragraph>
                Instead of requiring that you keep all of your information in some third-party software, Ideal Automate Explorer allows you to keep your files in word documents, pdfs, images, desktop shortcuts, etc. Ideal Automate Explorer gives you the ability to organize your knowledge in its original pristine state in your ordinary windows folder structure so that it can easily be shared with others. If you have sensitive information, it can be easily segregated into separate storage in you roaming folder or into separate folders that you can keep in different tabs within the Explorer.
            </Paragraph>
            <Paragraph>
                Ideal Automate Explorer is a good tool to use in conjunction with Ideal Automate. The main library for Ideal Automate is called IdealAutomateCore.dll. IdealAutomateCore also resides the IdealAutomate github repository. Prior to using Ideal Automate to build projects to automate redundant tasks, you should build the project called IdealAutomateCore. The Build Properties for IdealAutomateCore specifies that the dll should be copied to your roaming folder.
            </Paragraph>
            <Paragraph>
                <Image Source="/Images/IdealAutomateCoreBuildProperties.PNG" Width="800"  Margin="0,0,30,0" />
            </Paragraph>
            <Paragraph>
                When you use File/New Project to create a new project in Ideal Automate Explorer, it generates a project that has a reference to IdealAutomateCore.dll that is located in your roaming folder. Ideal Automate allows one to automate almost any task. It does this by allowing you to write scripts that can find images on the screen.  By finding an image on the screen, you are able to locate where you want to read or write something, regardless of which application the image resides within.  The fact that you can read and write to virtually any location makes it possible to create a degree of artificial intelligence where the script is able to perform real-time, problem-solving activities. For example, the script can read a piece of information, interpret what it has read, and then make decisions in real time about what to do based on that interpretation.
            </Paragraph>
            <Paragraph>
                The Windows Snipping Tool
                <Image Source="/Images/SnippingTool.PNG"  Height="45" VerticalAlignment="Bottom" /> can be very useful in allowing you to cut-n-paste images into your scripts. If you are unfamiliar with the Windows Snipping Tool, it is a free tool that is automatically included in the Windows Accessories folder. If you are having trouble figuring out how to use the snipping tool, you should google it in order to learn more about it.
            </Paragraph>            
          

        </FlowDocument>
    </FlowDocumentReader>

</Page>

