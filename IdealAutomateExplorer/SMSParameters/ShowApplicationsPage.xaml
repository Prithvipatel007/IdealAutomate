<Window x:Class="DataGridFilterTest.ShowApplicationsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:diagnostics="clr-namespace:System.Diagnostics;assembly=WindowsBase"

    xmlns:filter="clr-namespace:DataGridFilterLibrary;assembly=DataGridFilterLibrary"
    xmlns:local="clr-namespace:DataGridFilterTest"     
                
    Title="Automatic WPF Toolkit DataGrid Filtering" Name="MainWindow" 
        WindowState="Maximized"
       >


    <Window.Resources>
        <ObjectDataProvider x:Key="EmployeeData"></ObjectDataProvider>
       


        <!-- TextBox style which displays validation errors as a tooltip -->
        <Style TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}" >
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- style to apply to DataGridTextColumn in edit mode  -->
        <Style x:Key="CellEditStyle" TargetType="{x:Type TextBox}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- A Row Style which renders a different validation error indicator -->
        <Style x:Key="RowStyle" TargetType="{x:Type DataGridRow}">
            <Setter Property="ValidationErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <Ellipse Width="12" Height="12" Fill="Red" Stroke="Black" StrokeThickness="0.5"/>
                            <TextBlock FontWeight="Bold" Padding="4,0,0,0" Margin="0" VerticalAlignment="Top" Foreground="White" Text="!"
                                       ToolTip="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}},
                                                         Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RowStyleWithAlternation" TargetType="DataGridRow">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Background" Value="GhostWhite"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="ContextMenu" Value="{x:Null}"/>
            <Style.Triggers>
                <Trigger Property="AlternationIndex" Value="1">
                    <Setter Property="Background" Value="#FFD0D0E0"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F9F99F"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#F9F99F" />
                    <Setter Property="Foreground" Value="#FFFFFF" />
                </Trigger>
                <Trigger Property="Validation.HasError" Value="True" >
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="Red" ShadowDepth="0" BlurRadius="20" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness" Value="2" />
                    <Setter Property="BorderBrush" Value="Red" />
                    <Setter Property="Foreground" Value="Blue" />
                    <Setter Property="FontSize" Value="12" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <LinearGradientBrush x:Key="HeaderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Color="#FF6B8E95" Offset="0"/>
            <GradientStop Color="#FF14A7C1" Offset="1"/>
            <GradientStop Color="#FF1E424E" Offset="0.509"/>
            <GradientStop Color="#FF1D4855" Offset="0.542"/>
            <GradientStop Color="#FF1D4855" Offset="0.542"/>
            <GradientStop Color="#FF193A44" Offset="0.526"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HeaderBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Color="#FF1D1D1D" Offset="0.614"/>
            <GradientStop Color="#FF007F96" Offset="0.853"/>
            <GradientStop Color="#FF0AEAFA" Offset="1"/>
        </LinearGradientBrush>

        <Style x:Key="HeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{StaticResource HeaderBrush}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="{StaticResource HeaderBorderBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="MinHeight" Value="30" />
            <Setter Property="Cursor" Value="Hand" />
        </Style>


    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>




        <DockPanel>
            <ScrollViewer  VerticalAlignment="Top" HorizontalScrollBarVisibility="Auto"
                           VerticalScrollBarVisibility="Auto">
                <DataGrid Name="SampleGrid"    
                          Width="1300" Height="580"
  ItemsSource="{Binding Path=JobApplicationList}"
 
                       filter:DataGridExtensions.UseBackgroundWorkerForFiltering="True"
                        
                       filter:DataGridExtensions.IsClearButtonVisible="True"
                        
                       filter:DataGridExtensions.IsFilterVisible="True"
                        
                       ColumnHeaderStyle="{StaticResource {ComponentResourceKey 
           TypeInTargetAssembly={x:Type filter:DataGridHeaderFilterControl}, 
           ResourceId=DataGridHeaderFilterControlStyle}}"
                           AlternationCount="2"
                             RowStyle="{StaticResource RowStyleWithAlternation}"  
                                                     
          AutoGenerateColumns="False" Hyperlink.Click="DataGrid_Click"
          SelectionMode="Extended" SelectionUnit="CellOrRowHeader"
          RowHeaderWidth="20" ColumnHeaderHeight="55" RowHeight="25"
          Background="LightCyan"
        
          FrozenColumnCount="1"
          VerticalGridLinesBrush="LightBlue" GridLinesVisibility="Vertical"
          CanUserAddRows="False" CanUserDeleteRows="False">
                    <DataGrid.Columns>
                        <DataGridHyperlinkColumn Binding="{Binding Path=str_jobapplications_JobUrl}" Header="Job Title"
                                         Width="Auto" ContentBinding="{Binding Path=str_jobapplications_JobTitle}" 
                    SortMemberPath="str_jobapplications_JobTitle" >
                           
                        </DataGridHyperlinkColumn>
                        <DataGridTextColumn Binding="{Binding Path=str_jobapplications_CompanyTitle }" Header="Company Title" Width="125"
                                    Foreground="Blue" FontWeight="Bold"                                    
                                    CanUserReorder="False">
                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}" 
                                               BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type filter:DataGridHeaderFilterControl}, ResourceId=DataGridHeaderFilterControlStyle}}">
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Binding="{Binding str_jobapplications_Keyword}" Header="Keyword" Width="Auto"
                                    Foreground="Blue" FontWeight="Bold"
                                    CanUserReorder="False"/>
                        <DataGridTextColumn Binding="{Binding str_jobapplications_Location}" Header="Location" Width="Auto"
                                    Foreground="Blue" FontWeight="Bold"
                                    CanUserReorder="False"/>
                        <DataGridTextColumn Binding="{Binding str_jobapplications_JobBoard}" Header="JobBoard" Width="Auto"
                                    Foreground="Blue" FontWeight="Bold"
                                    CanUserReorder="False"/>
                        <DataGridComboBoxColumn Header="Status"   
                   SelectedValueBinding="{Binding Path=str_jobapplications_ApplicationStatus}"
                    ItemsSource="{Binding Source={StaticResource EmployeeData}, Path=EmployeeStatuses}"
                   SelectedValuePath="Id"
                   DisplayMemberPath="Name"
                    filter:DataGridComboBoxExtensions.UserCanEnterText="True">
                            <DataGridComboBoxColumn.EditingElementStyle>
                                <Style TargetType="{x:Type ComboBox}">
                                    <EventSetter Event="SelectionChanged" Handler="ApplicationStatusSelectionChanged" />
                                </Style>
                            </DataGridComboBoxColumn.EditingElementStyle>
                        </DataGridComboBoxColumn>

                        <DataGridTextColumn Binding="{Binding str_jobapplications_Comments}" Header="Comments" Width="Auto"
                                    Foreground="Blue" FontWeight="Bold"
                                    CanUserReorder="False">
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="{x:Type TextBox}">
                                    <EventSetter Event="LostFocus" Handler="Comments_LostFocus" />

                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding dt_jobapplications_DateAdded, StringFormat={}{0:MM/dd/yyyy}}" Header="Date Added" Width="Auto"
                                    Foreground="Blue" FontWeight="Bold"
                                    CanUserReorder="False"/>
                        <DataGridTextColumn Binding="{Binding dt_jobapplications_DateLastModified, StringFormat={}{0:MM/dd/yyyy}}" Header="Date Modified" Width="Auto"
                                    Foreground="Blue" FontWeight="Bold"
                                    CanUserReorder="False"/>
                        <DataGridTextColumn Binding="{Binding dt_jobapplications_DateApplied, StringFormat={}{0:MM/dd/yyyy}}" Header="Date Applied" Width="Auto"
                                    Foreground="Blue" FontWeight="Bold"
                                    CanUserReorder="False"/>
                       


                    </DataGrid.Columns>
                </DataGrid>

            </ScrollViewer>
        </DockPanel>
        <DockPanel Grid.Column="2" Grid.Row="2">
                        <Label Content="Total Rows Selected: "></Label>
                        <Label Margin="0,1,0,0" Content="{Binding ElementName=SampleGrid, Path=Items.Count, UpdateSourceTrigger=PropertyChanged}"></Label>
                    </DockPanel>

    </Grid>

    



</Window>
